let express,cors;_167‍.w("express",[["default",["express"],function(v){express=v}]]);_167‍.w("cors",[["default",["cors"],function(v){cors=v}]]);



const app = express();
app.use(cors());
app.use(express.json());

let students=[
  {imie: "Ala",  
  nazwisko: "Makota",
    wiek:23},
    {imie: "Zosia",
    nazwisko: "Samosia",
    wiek:20},
    {imie: "Cezary",
    nazwisko: "Pazura",
    wiek:50}];

app.get('/students', function (req, res) {
  res.send(students);
});

app.get('/students/:surname', (req, res)=> {
  let surname=req.params.surname;
  students.forEach((el)=>{
    if(el.nazwisko===surname) return res.send(el);
  })
  res.status(304).send({err:304});
});

app.post('/students', (req, res) => {
  const student = req.body;
  let dupl=false;
  students.forEach(el=>{
    if(el.imie===student.imie && el.nazwisko===student.nazwisko) {
      res.sendStatus(304);
      dupl=true;
    }
  });
  if(!dupl){
    _167‍.g.console.log(student);
    students.push(student);
    res.send(student);
  }
});

app.put('/students', (req, res) => {
  const student = req.body;
  let present=false;
  students.map((el,index,tab)=>{
    if(el.nazwisko===student.nazwisko) {
        tab[index].imie=student.imie;
        tab[index].wiek=student.wiek;
        res.send(tab[index]);
        present=true;
    }
  });
  if(!present) res.sendStatus(304);
});

app.delete('/', (req, res) => {
  return res.send('Received a DELETE HTTP method');
});

app.listen(8080, () =>
  console.log('Example app listening on port 8080!'),
);

